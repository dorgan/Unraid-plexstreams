Menu="Plex_Streams:1"
Title="Streams"
Tag="film"
---
<style>
    .caution {
        padding-left: 76px;
        margin: 16px -40px;
        padding: 16px 50px;
        background-color:  rgb(254, 239, 227);
        color: rgb(191, 54, 12);
        display: block;
        font-weight: bolder;
        font-size: 14px;
    }
    .caution i {
        font-size:15pt;
    }

    .caution .text {
        display: inline-block;
        vertical-align: 2px;
        padding-left: 7px;
    }

    #streams-container {
        
    }

    .stream-container {
        position: relative;
        width: 500px;
        background-color: #000;
    }

    .stream {
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
    }

    .blur {
        backdrop-filter: blur(3px);
    }

    .stream .blur {
        width: 100%;
        height: 100%;
    }

    .stream .poster {
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;
        width: 150px;
        height: 225px;
        z-index: 997;
    }

    .stream-container .bottom-box {
        width: 100%;
        position:absolute;
        bottom: 0;
        background: rgb(70,67,67,0.55);
        color: #fff;
        font-weight: bolder;
        z-index: 998;
    }

    .stream-container .bottom-box .progressBar {
        height: 5px;
        background-color: #cc0000;
    }

    .stream-container .bottom-box .progressBar .position {
        position: absolute;
        right: 5px;
        top: 0;
        width: 100px;
        font-size:9px;
        color: #fff;
        text-align:right;
    }

    .stream-container .bottom-box .title {
        padding: 10px;
        z-index: 999;
    }

    .stream-container .title .status {
        float:right;
        color: #fff;
    }

    .userIcon {
        border-radius: 50%;
        overflow: hidden;
        position: absolute;
        top: 5px;
        right: 5px;
        margin: 0;
        height: 75px;
        width: 75px;
        background-position: center;
        background-reppate: no-repeat;
        background-size: cover;
    }

    .details {
        opacity: 0;
        transition: visibility 0s, opacity 0.5s ease-out ;
        position: absolute;
        opacity: 0;
        left: 160px;
        top: 5px;
        background: rgb(34, 34, 34, 0.80);
        color: #fff;
        width: 244px;
        height: 175px;
        font-weight:bold;
    }

    .details:hover {
        opacity: 1;
    }

    .details ul {
        margin-top: 0;
        padding-left: 0;
        list-style: none;
        font-size:14px;
    }
    
    .details li {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        align-items: baseline;
        width:100%;
        margin-bottom:5px;
        box-sizing: border-box;
        color: #fff;
        font-size: 12px;
        line-height: 17px;
    }

    .details li div {
        color: #aaa;
        text-align: right;
        line-height: 14px;
    }
    
    .details li .label {
        color: #aaa;
        width:75px;
    }

    .details li .value {
        color: #fff;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        flex-grow: 1;
        text-align: left;
        margin-left: 10px;
    }

</style>
<?php
    $plugin = "plexstreams";
    $plg_path = "/boot/config/plugins/" . $plugin;
    $cfg_file    = "$plg_path/" . $plugin . ".cfg";
    if (file_exists($cfg_file)) {
        $cfg    = parse_ini_file($cfg_file);
    } else {
        $cfg = array();
    }

    if (!empty($cfg['TOKEN'])) {
        $host =  (substr($cfg['HOST'], -1) !== '/' ? $cfg['HOST'] : substr($cfg['HOST'],0,-1));
        $streams = getStreams($host, $cfg);
        
        if ($streams['@attributes']['size'] > 0) {
            if ((int)$streams['@attributes']['size'] === 1) {
                $streams['Video'] = [$streams['Video']];
            }
            echo('<h4 style="padding-bottom:25px;">Hover the stream for details</h4>');
            echo('<table border="0" cellspacing="0" cellpadding="5" id="streams-container">');
            foreach($streams['Video'] as $idx=>$video) {
                if (isset($video['Media']['@attributes'])) {
                    $video['Media'] = [$video['Media']];
                }
                foreach($video['Media'] as $media) {
                    if ($media['@attributes']['selected'] === '1') {
                        if (fmod($idx, 3) === 0 && $idx !== 0) {
                            echo( '</tr><tr>');
                        } else if ($idx === 0) {
                            echo('<tr>');
                        }
                        $title = $video['@attributes']['title'] . ' (' . $video['@attributes']['year'] . ')';
                        if (isset($video['@attributes']['parentTitle'])) {
                            $title = $video['@attributes']['parentTitle'] . ' - ' . $title;
                        }
                        if (isset($video['@attributes']['grandparentTitle'])) {
                            $title = $video['@attributes']['grandparentTitle'] . ' - ' . $title;
                        }
                        $artUrl = '/plugins/' . $plugin .'/getImage.php?img=' . urlencode($video['@attributes']['art']);
                        $thumbUrl = '/plugins/' . $plugin .'/getImage.php?img=' .  urlencode($video['@attributes']['grandparentThumb'] ?? $video['@attributes']['thumb']);
                        $user = $video['User']['@attributes']['title'];
                        $userAvatar = $video['User']['@attributes']['thumb'];
                        $state = $video['Player']['@attributes']['state'];
                        $stateIcon = 'play';
                        $length = floatval($media['Part']['@attributes']['duration']);
                        $lengthInSeconds =  floatval($length) / 1000;
                        $lengthInMinutes = ceil(($lengthInSeconds / 60 ));
                        
                        $lengthSeconds = floor($lengthInSeconds%60);
                        $lengthMinutes = floor(($lengthInSeconds%3600)/60);
                        $lengthHours = floor(($lengthInSeconds%86400)/3600);
                       
                        $currentPosition = floatval((int)$video['@attributes']['viewOffset']);
                        $currentPositionInSeconds = $currentPosition / 1000;
                        $currentPositionInMinutes = ceil($currentPositionInSeconds / 60);

                        $currentPositionSeconds = floor($currentPositionInMinutes);
                        $currentPositionMinutes = floor(($currentPositionInMinutes%3600)/60);
                        $currentPositionHours = floor(($currentPositionInMinutes&86400)/3600);

                        $percentPlayed = round(($currentPositionInMinutes/ $lengthInMinutes) * 100, 0);

                        if ($state === 'paused') {
                            $stateIcon = 'pause';
                        } else if ($state !== 'playing') {
                            $stateIcon = 'buffer';
                        }
                        $streamInfo = array();
                        foreach ($media['Part']['Stream'] as $stream) {
                            if ($stream['@attributes']['streamType'] === '2') {
                                $streamInfo['audio'] = $stream;
                            } else if ($stream['@attributes']['streamType'] === '1') {
                                $streamInfo['video'] = $stream;
                            }
                        }

                        echo('<td>
                            <div class="stream-container">
                                <div class="stream" style="background-image:url(' . $artUrl .');">
                                    <div class="blur">
                                        <div class="details">
                                            <ul class="detail-list">
                                                <li><div class="label">Length</div><div class="value">' . $lengthInMinutes .' Minutes</div></li>
                                                <li><div class="label">Stream</div><div class="value">' . ucwords($part['@attributes']['decision']) .'</div></li>
                                                <li><div class="label">Location</div><div class="value">' . strtoupper($video['Session']['@attributes']['location']) . '</div></li>
                                                <li><div class="label">Bandwidth</div><div class="value">' .round((int)$video['Session']['@attributes']['bandwidth'] / 1000, 1) . ' Mbps</div></li>
                                                <li><div class="label">Audio</div><div class="value">' . ($streamInfo['audio']['@attributes']['decision'] ?? 'Direct Play') . '</div></li>
                                                <li><div class="label">Video</div><div class="value">' . ($streamInfo['video']['@attributes']['decision'] ?? 'Direct Play') . '</div></li>
                                            </ul>
                                        </div>
                                        <div class="poster" style="background-image:url(' .$thumbUrl .');">
                                        </div>
                                        <div class="userIcon" title="' .$user . '" style="background-image:url(' . $userAvatar . ')">
                                        </div>
                                    </div>
                                </div>
                                <div class="bottom-box">
                                    <div class="progressBar" style="width: ' . $percentPlayed . '%;"><div class="position">' . $currentPositionInMinutes . ':' . str_pad($currentPositionSeconds, 2, '0', STR_PAD_LEFT) . ' / ' . $lengthInMinutes . ':' . str_pad($lengthSeconds, 2, '0', STR_PAD_LEFT) .'</div></div>
                                    <div class="title">' . $title . '<div class="status"><i class="fa fa-' .$stateIcon  . '" title="' .ucwords($state) .'"></i></div></div>
                                </div>
                            </div>
                        </td>');
                        if (isset($_REQUEST['dbg'])) {
                            echo('
                                <table border="0" cellspacing="0" cellpadding="0">
                                    <tr><td>Duration</td><td>' .(int)$part['@attributes']['duration'] .'</td></tr>
                                    <tr><td>LengthInSeconds</td><td>' .$lengthInSeconds .'</td></tr>    
                                    <tr><td>LengthInMinutes</td><td>' .$lengthInMinutes .'</td></tr>
                                    <tr><td>lengthSec</td></td><td>' .$lengthInSeconds .'</td></tr>
                                    <tr><td>lengthSeconds</td></td><td>' .$lengthSeconds .'</td></tr>
                                    <tr><td>lengthMinutes</td></td><td>' .$lengthMinutes .'</td></tr>
                                    <tr><td>lengthHours</td></td><td>' .$lengthHours .'</td></tr>
                                </table>
                            </td>');
                        }
                    }
                }
            }
            echo('</table>');
        } else {
            echo('<p align="center">There are currently no active streams</p>');
        }
    } else {
        echo('<div class="caution"><i class="fa fa-exclamation-triangle"></i><div class="text">Please provide server details under Settings -> Network Services -> Plex Streams or <a href="/Settings/PlexStreams">click here</a></div></div>');
    }



    function getStreams($host, $cfg) {
        $retArray = [];
        $url = $host . "/status/sessions?X-Plex-Token=" . $cfg['TOKEN'] .'&_m=' .mktime();
        if (isset($_REQUEST['dbg'])) {
            var_dump($url);
        }
        return getUrl($url);
    }

    function v_d($obj) {
        echo('<pre>');
        var_dump($obj);
        echo('</pre>');
    }

    function getUrl($url) {
        $arrContextOptions=array(
            "http" => array(
                "method" => "GET",
                "header" => 
                    "Content-Type: application/xml; charset=utf-8;\r\n".
                    "Connection: close\r\n".
                    "Cache-Control: no-cache, no-store, must-revalidate, max-age=0\r\n".
                    "Pragma: no-cache\r\n",
                "ignore_errors" => true,
                "timeout" => (float)30.0
            ),
            "ssl"=>array(
                "allow_self_signed"=>true,
                "verify_peer"=>false,
                "verify_peer_name"=>false,
            )
        );
        return json_decode(json_encode(simplexml_load_string(file_get_contents($url, false, stream_context_create($arrContextOptions)))), TRUE);
    }
?>